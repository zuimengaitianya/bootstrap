
//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TelnetMVC.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Web.Mvc;
    using System.ComponentModel.DataAnnotations;
    [Serializable]
    public partial class User
    {
        [ScaffoldColumn(false)]
        [Required(AllowEmptyStrings=false,ErrorMessage="用户ID不能为空")]
        [Display(Name="用户编号",Order=2000)]
        public string Id { get; set; }

        [Display(Order = 15000)]
        [Required(AllowEmptyStrings = false, ErrorMessage = "用户名不能为空")]
        [StringLength(20, MinimumLength = 6, ErrorMessage = "用户名不能大于{2} 且要小于{1}")]
        [Remote("User", "ValidateUserName", HttpMethod = "post", ErrorMessage = "用户名已经存在")]
        public string UserName { get; set; }

        [Display(Name="password")]
        [DataType(DataType.Password)]
        [Required(AllowEmptyStrings = false, ErrorMessage = "密码不能为空")]
        [StringLength(60, MinimumLength = 20, ErrorMessage = "密码必须在{2} 和{1}之间")]
        public string PassWord { get; set; }
        public string TrueName { get; set; }
        public string Sex { get; set; }
        public string Age { get; set; }
        public string Phone { get; set; }
        public string Address { get; set; }
        public string Statu { get; set; }
        public string OrgId { get; set; }
        public string Creator { get; set; }
        public Nullable<System.DateTime> CreateTime { get; set; }
        public string Modify { get; set; }
        public Nullable<System.DateTime> ModifyTime { get; set; }

        //[Required(AllowEmptyStrings = false, ErrorMessage = "邮箱必填")]
        // [RegularExpression(@"[A-Za-z0-9._%+-]+@[A-Za-z0-9]+\.[A-Za-z]{2,4}", ErrorMessage = "{0}的格式不正确")]
        // public string Email { get; set; }
 
        // [Compare("Email", ErrorMessage = "邮箱要相同")]
        // public string TEmail { get; set; }  //compare 大小写要相同 否则不会触发 验证
 
 
        // [Display(Name = "身份证号码")]
        // [RegularExpression(@"\d{17}[\d|x]|\d{15}", ErrorMessage = "身份证号码格式错误")]
        // public string IdentityNo { get; set; }
 
        // [Required(AllowEmptyStrings = false, ErrorMessage = "年龄必填")]
        // [Range(10, 100, ErrorMessage = "年龄不能大于{2} 不能小于{1}")]
        // public int Age { get; set; }
 
        // [ReadOnly(true)]
        // [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = "{0:c}")]
        // [Required(ErrorMessage = "金额不能为空")]
        // [Range(typeof(decimal), "20.0", "30.0", ErrorMessage = "金额在{1}和{2}之间")]
        // public decimal Money { get; set; }
    }
}
